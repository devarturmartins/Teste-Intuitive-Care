# **Teste Intuitive Care**

Este projeto √© um teste seletivo que envolve **Web Scraping**, **Transforma√ß√£o de Dados** e a cria√ß√£o de uma aplica√ß√£o **Full Stack** com **FastAPI** no backend e **Vue.js** no frontend. O banco de dados utilizado √© o **PostgreSQL**, e o ambiente √© gerenciado com **Docker**.

---

## **Pr√©-requisitos**

Antes de come√ßar, certifique-se de que voc√™ tem os seguintes itens instalados na sua m√°quina:

- **Python 3.10+**
- **Docker** e **Docker Compose**
- **Git**

---

## **Como Clonar o Projeto**

1. Abra o terminal e navegue at√© o diret√≥rio onde deseja clonar o projeto.
2. Execute o comando abaixo para clonar o reposit√≥rio:

   ```bash
   git clone <URL_DO_REPOSITORIO>
3. Navegue at√© o diret√≥rio do projeto:
    ```bash
    cd Teste-Intuitive-Care

## **Passo a Passo**

### **1. Web Scraping**

O script de Web Scraping coleta dados de uma fonte espec√≠fica e salva os resultados em arquivos locais.

#### **Como Executar**
1. Abra o terminal na raiz do projeto.
2. Execute o comando:

   ```bash
   python ./backend/app/services/webscraping.py


### **2. Transforma√ß√£o de Dados**

O script de transforma√ß√£o de dados processa os dados coletados, realiza limpeza, ajustes e salva os resultados em formatos `.csv` e `.xlsx`. Al√©m disso, compacta os arquivos em um `.zip`.

#### **Como Executar**
1. Abra o terminal na raiz do projeto.
2. Execute o comando:

   ```bash
   python ./backend/app/services/transformacao_dados.py


### **3. Banco de Dados**

O banco de dados utilizado √© o **PostgreSQL**, e os dados processados s√£o transferidos para ele.

#### **Como Configurar**
1. Certifique-se de que o **Docker** est√° instalado na sua m√°quina.
2. Suba o container do banco de dados com o comando:

   ```bash
   docker-compose up -d db

3. Execute o script para criar as tabelas e transferir os dados para o banco:

   ```bash
   python ./backend/app/services/executa_sql.py

4. As queries de filtros est√£o localizadas no diret√≥rio:
   ```bash
   ./backend/app/sql/queries

### **4. Subir Ambiente Completo**

Para rodar o backend, frontend e banco de dados juntos, siga os passos abaixo:

1. Certifique-se de que o Docker est√° instalado.
2. Execute: 
    ```bash
    docker-compose up --build
3. O Docker ir√° instalar automaticamente as depend√™ncias do backend e do frontend.

## **Comandos √öteis**

### **1. Subir apenas o banco de dados**
Para subir apenas o container do banco de dados PostgreSQL:

    ```bash
    docker-compose up -d db

### **2. Subir todo o ambiente (backend, frontend e banco de dados)**
Para subir o backend, frontend e banco de dados juntos, com as depend√™ncias sendo instaladas automaticamente:

    ```bash
    docker-compose up --build

### **3. Parar os containers**

    ```bash
    docker-compose down

### **Acessar o terminal do container**
    1. Backend
        ```bash
        docker exec -it backend_app sh

    2. Banco
        ```bash
        docker exec -it postgres_db psql -U postgres

### **Observa√ß√µes:**
Certifique-se de que os arquivos necess√°rios (como PDFs ou CSVs) est√£o no diret√≥rio correto antes de executar os scripts.

O Docker instala automaticamente as depend√™ncias do backend e do frontend ao rodar o comando docker-compose up --build


Se precisar de mais informa√ß√µes, entre em contato! üöÄ